// Generated by @wagmi/cli@1.3.0 on 4/25/2024 at 10:52:15 AM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
  useNetwork,
} from 'wagmi'
import { ReadContractResult, WriteContractMode, PrepareWriteContractResult } from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GnarsV2AuctionHouse
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export const gnarsV2AuctionHouseABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousAdmin', internalType: 'address', type: 'address', indexed: false },
      { name: 'newAdmin', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'AdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'sender', internalType: 'address', type: 'address', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AuctionBid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'startTimestamp', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'endTimestamp', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AuctionCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'endTime', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AuctionExtended',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'minBidIncrementPercentage', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'AuctionMinBidIncrementPercentageUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'reservePrice', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'AuctionReservePriceUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'winner', internalType: 'address', type: 'address', indexed: false },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AuctionSettled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'timeBuffer', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'AuctionTimeBufferUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'beacon', internalType: 'address', type: 'address', indexed: true }],
    name: 'BeaconUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ogGnarId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'OGGnarClaimed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
    name: 'Paused',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'skate', internalType: 'address', type: 'address', indexed: false },
      { name: 'dao', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'SkateDaoAddressesUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
    name: 'Unpaused',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'Upgraded',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'SKATE_OG_ADDRESS',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auction',
    outputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'startTimestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'endTimestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'bidder', internalType: 'address payable', type: 'address' },
      { name: 'skatePercent', internalType: 'uint8', type: 'uint8' },
      { name: 'daoPercent', internalType: 'uint8', type: 'uint8' },
      { name: 'settled', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auctionCounter',
    outputs: [{ name: '_value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'baseAuctionTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'ogGnarIds', internalType: 'uint256[]', type: 'uint256[]' }],
    name: 'claimGnars',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256' },
      { name: 'skatePercent', internalType: 'uint8', type: 'uint8' },
      { name: 'daoPercent', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'createBid',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dao',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'gnars',
    outputs: [{ name: '', internalType: 'contract ISkateContractV2', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'gnarsClaimedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_skate', internalType: 'address', type: 'address' },
      { name: '_dao', internalType: 'address', type: 'address' },
      { name: '_gnars', internalType: 'contract ISkateContractV2', type: 'address' },
      { name: '_weth', internalType: 'address', type: 'address' },
      { name: '_reservePrice', internalType: 'uint256', type: 'uint256' },
      { name: '_minBidIncrementPercentage', internalType: 'uint8', type: 'uint8' },
      { name: '_baseAuctionTime', internalType: 'uint256', type: 'uint256' },
      { name: '_timeDoublingCount', internalType: 'uint256', type: 'uint256' },
      { name: '_timeBuffer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minBidIncrementPercentage',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'pause', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'paused',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'remainingTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reservePrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_minBidIncrementPercentage', internalType: 'uint8', type: 'uint8' }],
    name: 'setMinBidIncrementPercentage',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_reservePrice', internalType: 'uint256', type: 'uint256' }],
    name: 'setReservePrice',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_skate', internalType: 'address', type: 'address' },
      { name: '_dao', internalType: 'address', type: 'address' },
    ],
    name: 'setSkateDaoAddresses',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_timeBuffer', internalType: 'uint256', type: 'uint256' }],
    name: 'setTimeBuffer',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'settleAuction', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'settleCurrentAndCreateNewAuction',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'skate',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'timeBuffer',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'timeDoublingCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'unpause', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newImplementation', internalType: 'address', type: 'address' }],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'weth',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export const gnarsV2AuctionHouseAddress = {
  1: '0xC28e0d3c00296dD8c5C3F2E9707361920f92a209',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export const gnarsV2AuctionHouseConfig = { address: gnarsV2AuctionHouseAddress, abi: gnarsV2AuctionHouseABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GnarsDAO
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export const gnarsDaoABI = [
  { type: 'error', inputs: [], name: 'AdminOnly' },
  { type: 'error', inputs: [], name: 'CantCancelExecutedProposal' },
  { type: 'error', inputs: [], name: 'CantVetoExecutedProposal' },
  { type: 'error', inputs: [], name: 'InvalidMaxQuorumVotesBPS' },
  { type: 'error', inputs: [], name: 'InvalidMinQuorumVotesBPS' },
  { type: 'error', inputs: [], name: 'MinQuorumBPSGreaterThanMaxQuorumBPS' },
  { type: 'error', inputs: [], name: 'PendingVetoerOnly' },
  { type: 'error', inputs: [], name: 'UnsafeUint16Cast' },
  { type: 'error', inputs: [], name: 'VetoerBurned' },
  { type: 'error', inputs: [], name: 'VetoerOnly' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldMaxQuorumVotesBPS', internalType: 'uint16', type: 'uint16', indexed: false },
      { name: 'newMaxQuorumVotesBPS', internalType: 'uint16', type: 'uint16', indexed: false },
    ],
    name: 'MaxQuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldMinQuorumVotesBPS', internalType: 'uint16', type: 'uint16', indexed: false },
      { name: 'newMinQuorumVotesBPS', internalType: 'uint16', type: 'uint16', indexed: false },
    ],
    name: 'MinQuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldAdmin', internalType: 'address', type: 'address', indexed: false },
      { name: 'newAdmin', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'NewAdmin',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldImplementation', internalType: 'address', type: 'address', indexed: false },
      { name: 'newImplementation', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'NewImplementation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldPendingAdmin', internalType: 'address', type: 'address', indexed: false },
      { name: 'newPendingAdmin', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'NewPendingAdmin',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldPendingVetoer', internalType: 'address', type: 'address', indexed: false },
      { name: 'newPendingVetoer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'NewPendingVetoer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldVetoer', internalType: 'address', type: 'address', indexed: false },
      { name: 'newVetoer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'NewVetoer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'ProposalCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'proposer', internalType: 'address', type: 'address', indexed: false },
      { name: 'targets', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'signatures', internalType: 'string[]', type: 'string[]', indexed: false },
      { name: 'calldatas', internalType: 'bytes[]', type: 'bytes[]', indexed: false },
      { name: 'startBlock', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'description', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'ProposalCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'proposer', internalType: 'address', type: 'address', indexed: false },
      { name: 'targets', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'signatures', internalType: 'string[]', type: 'string[]', indexed: false },
      { name: 'calldatas', internalType: 'bytes[]', type: 'bytes[]', indexed: false },
      { name: 'startBlock', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'proposalThreshold', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'quorumVotes', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'description', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'ProposalCreatedWithRequirements',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'ProposalExecuted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'eta', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalQueued',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldProposalThresholdBPS', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newProposalThresholdBPS', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalThresholdBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'ProposalVetoed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldQuorumCoefficient', internalType: 'uint32', type: 'uint32', indexed: false },
      { name: 'newQuorumCoefficient', internalType: 'uint32', type: 'uint32', indexed: false },
    ],
    name: 'QuorumCoefficientSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldQuorumVotesBPS', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newQuorumVotesBPS', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'QuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'voter', internalType: 'address', type: 'address', indexed: true },
      { name: 'refundAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'refundSent', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'RefundableVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'voter', internalType: 'address', type: 'address', indexed: true },
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'support', internalType: 'uint8', type: 'uint8', indexed: false },
      { name: 'votes', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'reason', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'VoteCast',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldVotingDelay', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newVotingDelay', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'VotingDelaySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldVotingPeriod', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newVotingPeriod', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'VotingPeriodSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'sent', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'Withdraw',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'BALLOT_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_PROPOSAL_THRESHOLD_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_QUORUM_VOTES_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_QUORUM_VOTES_BPS_UPPER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_BASE_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_GAS_USED',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_PRIORITY_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_VOTING_DELAY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_VOTING_PERIOD',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_PROPOSAL_THRESHOLD_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_QUORUM_VOTES_BPS_LOWER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_QUORUM_VOTES_BPS_UPPER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_VOTING_DELAY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_VOTING_PERIOD',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'REFUND_BASE_GAS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: '_acceptAdmin', outputs: [] },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: '_acceptVetoer', outputs: [] },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: '_burnVetoPower', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMinQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
      { name: 'newMaxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
      { name: 'newQuorumCoefficient', internalType: 'uint32', type: 'uint32' },
    ],
    name: '_setDynamicQuorumParams',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newMaxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' }],
    name: '_setMaxQuorumVotesBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newMinQuorumVotesBPS', internalType: 'uint16', type: 'uint16' }],
    name: '_setMinQuorumVotesBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newPendingAdmin', internalType: 'address', type: 'address' }],
    name: '_setPendingAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newPendingVetoer', internalType: 'address', type: 'address' }],
    name: '_setPendingVetoer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newProposalThresholdBPS', internalType: 'uint256', type: 'uint256' }],
    name: '_setProposalThresholdBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newQuorumCoefficient', internalType: 'uint32', type: 'uint32' }],
    name: '_setQuorumCoefficient',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newVotingDelay', internalType: 'uint256', type: 'uint256' }],
    name: '_setVotingDelay',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newVotingPeriod', internalType: 'uint256', type: 'uint256' }],
    name: '_setVotingPeriod',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_withdraw',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'admin',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'cancel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'castRefundableVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'castRefundableVoteWithReason',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'castVoteBySig',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'castVoteWithReason',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'againstVotes', internalType: 'uint256', type: 'uint256' },
      { name: 'totalSupply', internalType: 'uint256', type: 'uint256' },
      {
        name: 'params',
        internalType: 'struct GnarsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
    name: 'dynamicQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'execute',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'getActions',
    outputs: [
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'signatures', internalType: 'string[]', type: 'string[]' },
      { name: 'calldatas', internalType: 'bytes[]', type: 'bytes[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber_', internalType: 'uint256', type: 'uint256' }],
    name: 'getDynamicQuorumParamsAt',
    outputs: [
      {
        name: '',
        internalType: 'struct GnarsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'voter', internalType: 'address', type: 'address' },
    ],
    name: 'getReceipt',
    outputs: [
      {
        name: '',
        internalType: 'struct GnarsDAOStorageV1Adjusted.Receipt',
        type: 'tuple',
        components: [
          { name: 'hasVoted', internalType: 'bool', type: 'bool' },
          { name: 'support', internalType: 'uint8', type: 'uint8' },
          { name: 'votes', internalType: 'uint96', type: 'uint96' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'gnars',
    outputs: [{ name: '', internalType: 'contract GnarsTokenLike', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'implementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'timelock_', internalType: 'address', type: 'address' },
      { name: 'gnars_', internalType: 'address', type: 'address' },
      { name: 'vetoer_', internalType: 'address', type: 'address' },
      { name: 'votingPeriod_', internalType: 'uint256', type: 'uint256' },
      { name: 'votingDelay_', internalType: 'uint256', type: 'uint256' },
      { name: 'proposalThresholdBPS_', internalType: 'uint256', type: 'uint256' },
      {
        name: 'dynamicQuorumParams_',
        internalType: 'struct GnarsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'latestProposalIds',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingAdmin',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingVetoer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalMaxOperations',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalThreshold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalThresholdBPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'proposals',
    outputs: [
      {
        name: '',
        internalType: 'struct GnarsDAOStorageV2.ProposalCondensed',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'proposer', internalType: 'address', type: 'address' },
          { name: 'proposalThreshold', internalType: 'uint256', type: 'uint256' },
          { name: 'quorumVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'eta', internalType: 'uint256', type: 'uint256' },
          { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'forVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'againstVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'abstainVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'canceled', internalType: 'bool', type: 'bool' },
          { name: 'vetoed', internalType: 'bool', type: 'bool' },
          { name: 'executed', internalType: 'bool', type: 'bool' },
          { name: 'totalSupply', internalType: 'uint256', type: 'uint256' },
          { name: 'creationBlock', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'signatures', internalType: 'string[]', type: 'string[]' },
      { name: 'calldatas', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'description', internalType: 'string', type: 'string' },
    ],
    name: 'propose',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'queue',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'quorumParamsCheckpoints',
    outputs: [
      { name: 'fromBlock', internalType: 'uint32', type: 'uint32' },
      {
        name: 'params',
        internalType: 'struct GnarsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'quorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'quorumVotesBPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'state',
    outputs: [{ name: '', internalType: 'enum GnarsDAOStorageV1Adjusted.ProposalState', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'timelock',
    outputs: [{ name: '', internalType: 'contract IGnarsDAOExecutor', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'veto',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'vetoer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'votingDelay',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'votingPeriod',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export const gnarsDaoAddress = {
  1: '0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export const gnarsDaoConfig = { address: gnarsDaoAddress, abi: gnarsDaoABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GnarsV2Token
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export const gnarsV2TokenABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_noundersDAO', internalType: 'address', type: 'address' },
      { name: '_minter', internalType: 'address', type: 'address' },
      { name: '_descriptor', internalType: 'contract IGnarDescriptorV2', type: 'address' },
      { name: '_seeder', internalType: 'contract IGnarSeederV2', type: 'address' },
      { name: '_proxyRegistry', internalType: 'contract IProxyRegistry', type: 'address' },
      { name: '_initialGnarId', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'delegator', internalType: 'address', type: 'address', indexed: true },
      { name: 'fromDelegate', internalType: 'address', type: 'address', indexed: true },
      { name: 'toDelegate', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'DelegateChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'delegate', internalType: 'address', type: 'address', indexed: true },
      { name: 'previousBalance', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newBalance', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'DelegateVotesChanged',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'DescriptorLocked' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'descriptor', internalType: 'contract IGnarDescriptorV2', type: 'address', indexed: false }],
    name: 'DescriptorUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'GnarBurned',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'seed',
        internalType: 'struct IGnarSeederV2.Seed',
        type: 'tuple',
        components: [
          { name: 'background', internalType: 'uint48', type: 'uint48' },
          { name: 'body', internalType: 'uint48', type: 'uint48' },
          { name: 'accessory', internalType: 'uint48', type: 'uint48' },
          { name: 'head', internalType: 'uint48', type: 'uint48' },
          { name: 'glasses', internalType: 'uint48', type: 'uint48' },
        ],
        indexed: false,
      },
    ],
    name: 'GnarCreated',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'MinterLocked' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'minter', internalType: 'address', type: 'address', indexed: false }],
    name: 'MinterUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'SeederLocked' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'seeder', internalType: 'contract IGnarSeederV2', type: 'address', indexed: false }],
    name: 'SeederUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DELEGATION_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'gnarId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'checkpoints',
    outputs: [
      { name: 'fromBlock', internalType: 'uint32', type: 'uint32' },
      { name: 'votes', internalType: 'uint96', type: 'uint96' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'customDescription',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'delegatee', internalType: 'address', type: 'address' }],
    name: 'delegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'delegatee', internalType: 'address', type: 'address' },
      { name: 'nonce', internalType: 'uint256', type: 'uint256' },
      { name: 'expiry', internalType: 'uint256', type: 'uint256' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'delegateBySig',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'delegator', internalType: 'address', type: 'address' }],
    name: 'delegates',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'descriptor',
    outputs: [{ name: '', internalType: 'contract IGnarDescriptorV2', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getCurrentVotes',
    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getPriorVotes',
    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialGnarId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isDescriptorLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isMinterLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isSeederLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'lockDescriptor', outputs: [] },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'lockMinter', outputs: [] },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'lockSeeder', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'mint',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minter',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'nonces',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'noundersDAO',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'numCheckpoints',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proxyRegistry',
    outputs: [{ name: '', internalType: 'contract IProxyRegistry', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'seeder',
    outputs: [{ name: '', internalType: 'contract IGnarSeederV2', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'seeds',
    outputs: [
      { name: 'background', internalType: 'uint48', type: 'uint48' },
      { name: 'body', internalType: 'uint48', type: 'uint48' },
      { name: 'accessory', internalType: 'uint48', type: 'uint48' },
      { name: 'head', internalType: 'uint48', type: 'uint48' },
      { name: 'glasses', internalType: 'uint48', type: 'uint48' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_description', internalType: 'string', type: 'string' },
    ],
    name: 'setCustomDescription',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_descriptor', internalType: 'contract IGnarDescriptorV2', type: 'address' }],
    name: 'setDescriptor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_minter', internalType: 'address', type: 'address' }],
    name: 'setMinter',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_seeder', internalType: 'contract IGnarSeederV2', type: 'address' }],
    name: 'setSeeder',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'viewDescription',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'delegator', internalType: 'address', type: 'address' }],
    name: 'votesToDelegate',
    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export const gnarsV2TokenAddress = {
  1: '0x558BFFF0D583416f7C4e380625c7865821b8E95C',
  8453: '0x880Fb3Cf5c6Cc2d7DFC13a993E839a9411200C17',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export const gnarsV2TokenConfig = { address: gnarsV2TokenAddress, abi: gnarsV2TokenABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GnarsOG
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export const gnarsOgABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_skate', internalType: 'address', type: 'address' },
      { name: '_dao', internalType: 'address', type: 'address' },
      { name: '_descriptor', internalType: 'address', type: 'address' },
      { name: '_seeder', internalType: 'address', type: 'address' },
      { name: '_reservePrice', internalType: 'uint256', type: 'uint256' },
      { name: '_minBidIncrementPercentage', internalType: 'uint8', type: 'uint8' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'sender', internalType: 'address', type: 'address', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AuctionBid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'gnarId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'AuctionCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'winner', internalType: 'address', type: 'address', indexed: false },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AuctionSettled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'percent', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'MinBidIncrementPercentageUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'price', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'ReservePriceUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auction',
    outputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'bidder', internalType: 'address payable', type: 'address' },
      { name: 'skatePercent', internalType: 'uint8', type: 'uint8' },
      { name: 'daoPercent', internalType: 'uint8', type: 'uint8' },
      { name: 'settled', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auctionPeriodBlocks',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'auctionStart', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'gnarId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256' },
      { name: '_skatePercent', internalType: 'uint8', type: 'uint8' },
      { name: '_daoPercent', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'createBid',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'currentGnarId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dao',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'descriptor',
    outputs: [{ name: '', internalType: 'contract IGnarDescriptor', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minBidIncrementPercentage',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'pause', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'paused',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'remainBlocks',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reservePrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'seeder',
    outputs: [{ name: '', internalType: 'contract IGnarSeeder', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'seeds',
    outputs: [
      { name: 'background', internalType: 'uint48', type: 'uint48' },
      { name: 'body', internalType: 'uint48', type: 'uint48' },
      { name: 'accessory', internalType: 'uint48', type: 'uint48' },
      { name: 'head', internalType: 'uint48', type: 'uint48' },
      { name: 'glasses', internalType: 'uint48', type: 'uint48' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_auctionPeriodBlocks', internalType: 'uint16', type: 'uint16' }],
    name: 'setAuctionPeriodBlocks',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_descriptor', internalType: 'address', type: 'address' }],
    name: 'setDescriptor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_minBidIncrementPercentage', internalType: 'uint8', type: 'uint8' }],
    name: 'setMinBidIncrementPercentage',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_reservePrice', internalType: 'uint256', type: 'uint256' }],
    name: 'setReservePrice',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_seeder', internalType: 'address', type: 'address' }],
    name: 'setSeeder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_skate', internalType: 'address', type: 'address' },
      { name: '_dao', internalType: 'address', type: 'address' },
    ],
    name: 'setSkateDaoAddresses',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'settleCurrentAndCreateNewAuction',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'skate',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'unpause', outputs: [] },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export const gnarsOgAddress = {
  1: '0x494715B2a3C75DaDd24929835B658a1c19bd4552',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export const gnarsOgConfig = { address: gnarsOgAddress, abi: gnarsOgABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GnarsHD
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export const gnarsHdABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_gnarsV2Address', internalType: 'address', type: 'address' },
      { name: '_rendererBaseUri', internalType: 'string', type: 'string' },
      {
        name: '_artwork',
        internalType: 'struct GnarsHD.Artwork',
        type: 'tuple',
        components: [
          { name: 'ipfsFolder', internalType: 'string', type: 'string' },
          { name: 'amountBackgrounds', internalType: 'uint48', type: 'uint48' },
          { name: 'amountBodies', internalType: 'uint48', type: 'uint48' },
          { name: 'amountAccessories', internalType: 'uint48', type: 'uint48' },
          { name: 'amountHeads', internalType: 'uint48', type: 'uint48' },
          { name: 'amountNoggles', internalType: 'uint48', type: 'uint48' },
        ],
      },
      { name: '_contractURI', internalType: 'string', type: 'string' },
      { name: '_owner', internalType: 'address', type: 'address' },
    ],
  },
  { type: 'error', inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }], name: 'TokenDoesNotExist' },
  { type: 'error', inputs: [], name: 'Untransferable' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: '_from', internalType: 'address', type: 'address', indexed: true },
      { name: '_to', internalType: 'address', type: 'address', indexed: true },
      { name: '_tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'artwork',
    outputs: [
      { name: 'ipfsFolder', internalType: 'string', type: 'string' },
      { name: 'amountBackgrounds', internalType: 'uint48', type: 'uint48' },
      { name: 'amountBodies', internalType: 'uint48', type: 'uint48' },
      { name: 'amountAccessories', internalType: 'uint48', type: 'uint48' },
      { name: 'amountHeads', internalType: 'uint48', type: 'uint48' },
      { name: 'amountNoggles', internalType: 'uint48', type: 'uint48' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' }],
    name: 'assertOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'contractURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getAttributes',
    outputs: [
      { name: 'resultAttributes', internalType: 'string', type: 'string' },
      { name: 'queryString', internalType: 'string', type: 'string' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'backgroundIndex', internalType: 'uint48', type: 'uint48' }],
    name: 'getBackgroundQueryParam',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'folder', internalType: 'string', type: 'string' },
      { name: 'partIndex', internalType: 'uint48', type: 'uint48' },
      { name: 'amountOfPart', internalType: 'uint48', type: 'uint48' },
    ],
    name: 'getPartQueryParam',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'traitType', internalType: 'string', type: 'string' },
      { name: 'partIndex', internalType: 'uint48', type: 'uint48' },
      {
        name: 'getPartDescription',
        internalType: 'function (uint256) view external returns (string)',
        type: 'function',
      },
    ],
    name: 'getPartTrait',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'gnarsV2',
    outputs: [{ name: '', internalType: 'contract ISkateContractV2', type: 'address' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isTransferable',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'rendererBaseUri',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_artwork',
        internalType: 'struct GnarsHD.Artwork',
        type: 'tuple',
        components: [
          { name: 'ipfsFolder', internalType: 'string', type: 'string' },
          { name: 'amountBackgrounds', internalType: 'uint48', type: 'uint48' },
          { name: 'amountBodies', internalType: 'uint48', type: 'uint48' },
          { name: 'amountAccessories', internalType: 'uint48', type: 'uint48' },
          { name: 'amountHeads', internalType: 'uint48', type: 'uint48' },
          { name: 'amountNoggles', internalType: 'uint48', type: 'uint48' },
        ],
      },
    ],
    name: 'setArtwork',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_contractURI', internalType: 'string', type: 'string' }],
    name: 'setContractUri',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_rendererBaseUri', internalType: 'string', type: 'string' }],
    name: 'setRendererBaseUri',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_owner', internalType: 'address', type: 'address' },
      { name: '_index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export const gnarsHdAddress = {
  1: '0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export const gnarsHdConfig = { address: gnarsHdAddress, abi: gnarsHdABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NNSENSReverseResolver
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x849F92178950f6254db5D16D1ba265E70521aC1B)
 */
export const nnsensReverseResolverABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_nns', internalType: 'address', type: 'address' },
      { name: '_ens', internalType: 'address', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ens',
    outputs: [{ name: '', internalType: 'contract ENS', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nns',
    outputs: [{ name: '', internalType: 'contract ENS', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'resolve',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x849F92178950f6254db5D16D1ba265E70521aC1B)
 */
export const nnsensReverseResolverAddress = {
  1: '0x849F92178950f6254db5D16D1ba265E70521aC1B',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x849F92178950f6254db5D16D1ba265E70521aC1B)
 */
export const nnsensReverseResolverConfig = {
  address: nnsensReverseResolverAddress,
  abi: nnsensReverseResolverABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsV2AuctionHouseAddress
  } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"SKATE_OG_ADDRESS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSkateOgAddress<
  TFunctionName extends 'SKATE_OG_ADDRESS',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'SKATE_OG_ADDRESS',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"auction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuction<
  TFunctionName extends 'auction',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'auction',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"auctionCounter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionCounter<
  TFunctionName extends 'auctionCounter',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'auctionCounter',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"baseAuctionTime"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseBaseAuctionTime<
  TFunctionName extends 'baseAuctionTime',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'baseAuctionTime',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"dao"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseDao<
  TFunctionName extends 'dao',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'dao',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"gnars"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseGnars<
  TFunctionName extends 'gnars',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'gnars',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"gnarsClaimedFor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseGnarsClaimedFor<
  TFunctionName extends 'gnarsClaimedFor',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'gnarsClaimedFor',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"minBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseMinBidIncrementPercentage<
  TFunctionName extends 'minBidIncrementPercentage',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'minBidIncrementPercentage',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"paused"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHousePaused<
  TFunctionName extends 'paused',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'paused',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"remainingTime"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseRemainingTime<
  TFunctionName extends 'remainingTime',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'remainingTime',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"reservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseReservePrice<
  TFunctionName extends 'reservePrice',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'reservePrice',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"skate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSkate<
  TFunctionName extends 'skate',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'skate',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"timeBuffer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseTimeBuffer<
  TFunctionName extends 'timeBuffer',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'timeBuffer',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"timeDoublingCount"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseTimeDoublingCount<
  TFunctionName extends 'timeDoublingCount',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'timeDoublingCount',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"weth"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseWeth<
  TFunctionName extends 'weth',
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'weth',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, TFunctionName, TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"claimGnars"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseClaimGnars<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'claimGnars'>['request']['abi'],
        'claimGnars',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'claimGnars' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'claimGnars', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'claimGnars'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'claimGnars', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'claimGnars',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"createBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseCreateBid<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'createBid'>['request']['abi'],
        'createBid',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'createBid' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'createBid', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createBid'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'createBid', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'createBid',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseInitialize<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'initialize'>['request']['abi'],
        'initialize',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'initialize', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'initialize', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"pause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHousePause<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'pause'>['request']['abi'],
        'pause',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'pause' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'pause', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'pause'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'pause', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'pause',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'renounceOwnership'>['request']['abi'],
        'renounceOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'renounceOwnership' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'renounceOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'renounceOwnership', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setMinBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSetMinBidIncrementPercentage<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'setMinBidIncrementPercentage'>['request']['abi'],
        'setMinBidIncrementPercentage',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setMinBidIncrementPercentage' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setMinBidIncrementPercentage', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinBidIncrementPercentage'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'setMinBidIncrementPercentage', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setMinBidIncrementPercentage',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setReservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSetReservePrice<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'setReservePrice'>['request']['abi'],
        'setReservePrice',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setReservePrice' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setReservePrice', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setReservePrice'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'setReservePrice', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setReservePrice',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setSkateDaoAddresses"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSetSkateDaoAddresses<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'setSkateDaoAddresses'>['request']['abi'],
        'setSkateDaoAddresses',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setSkateDaoAddresses' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setSkateDaoAddresses', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSkateDaoAddresses'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'setSkateDaoAddresses', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setSkateDaoAddresses',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setTimeBuffer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSetTimeBuffer<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'setTimeBuffer'>['request']['abi'],
        'setTimeBuffer',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setTimeBuffer' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setTimeBuffer', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setTimeBuffer'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'setTimeBuffer', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setTimeBuffer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"settleAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSettleAuction<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'settleAuction'>['request']['abi'],
        'settleAuction',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'settleAuction' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'settleAuction', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'settleAuction'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'settleAuction', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'settleAuction',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"settleCurrentAndCreateNewAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSettleCurrentAndCreateNewAuction<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'settleCurrentAndCreateNewAuction'>['request']['abi'],
        'settleCurrentAndCreateNewAuction',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'settleCurrentAndCreateNewAuction' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'settleCurrentAndCreateNewAuction', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'settleCurrentAndCreateNewAuction'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'settleCurrentAndCreateNewAuction', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'settleCurrentAndCreateNewAuction',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'transferOwnership'>['request']['abi'],
        'transferOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'transferOwnership' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'transferOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'transferOwnership', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"unpause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUnpause<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'unpause'>['request']['abi'],
        'unpause',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'unpause' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'unpause', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unpause'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'unpause', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'unpause',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"upgradeTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUpgradeTo<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'upgradeTo'>['request']['abi'],
        'upgradeTo',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'upgradeTo' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'upgradeTo', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'upgradeTo', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"upgradeToAndCall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUpgradeToAndCall<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2AuctionHouseABI, 'upgradeToAndCall'>['request']['abi'],
        'upgradeToAndCall',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'upgradeToAndCall' }
    : UseContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'upgradeToAndCall', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgradeToAndCall'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsV2AuctionHouseABI, 'upgradeToAndCall', TMode>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'upgradeToAndCall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsV2AuctionHouseAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"claimGnars"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseClaimGnars(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'claimGnars'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'claimGnars',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'claimGnars'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"createBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseCreateBid(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'createBid'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'createBid',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'createBid'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'initialize'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"pause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHousePause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'pause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'pause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'pause'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setMinBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSetMinBidIncrementPercentage(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setMinBidIncrementPercentage'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setMinBidIncrementPercentage',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setMinBidIncrementPercentage'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setReservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSetReservePrice(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setReservePrice'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setReservePrice',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setReservePrice'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setSkateDaoAddresses"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSetSkateDaoAddresses(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setSkateDaoAddresses'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setSkateDaoAddresses',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setSkateDaoAddresses'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setTimeBuffer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSetTimeBuffer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setTimeBuffer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setTimeBuffer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'setTimeBuffer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"settleAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSettleAuction(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'settleAuction'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'settleAuction',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'settleAuction'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"settleCurrentAndCreateNewAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSettleCurrentAndCreateNewAuction(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'settleCurrentAndCreateNewAuction'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'settleCurrentAndCreateNewAuction',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'settleCurrentAndCreateNewAuction'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"unpause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseUnpause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'unpause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'unpause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'unpause'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"upgradeTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'upgradeTo'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'upgradeTo'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"upgradeToAndCall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseUpgradeToAndCall(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'upgradeToAndCall'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'upgradeToAndCall',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'upgradeToAndCall'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof gnarsV2AuctionHouseABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsV2AuctionHouseAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AdminChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AdminChanged',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AdminChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionBidEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionBid'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2AuctionHouseAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionBid',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionBid'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionCreated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionCreatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionCreated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionCreated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionCreated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionExtended"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionExtendedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionExtended'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionExtended',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionExtended'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionMinBidIncrementPercentageUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionMinBidIncrementPercentageUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionMinBidIncrementPercentageUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionMinBidIncrementPercentageUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionMinBidIncrementPercentageUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionReservePriceUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionReservePriceUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionReservePriceUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionReservePriceUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionReservePriceUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionSettled"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionSettledEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionSettled'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionSettled',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionSettled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionTimeBufferUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionTimeBufferUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionTimeBufferUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionTimeBufferUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionTimeBufferUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"BeaconUpgraded"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseBeaconUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'BeaconUpgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'BeaconUpgraded',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'BeaconUpgraded'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"OGGnarClaimed"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseOgGnarClaimedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'OGGnarClaimed'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'OGGnarClaimed',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'OGGnarClaimed'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"Paused"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHousePausedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Paused'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2AuctionHouseAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'Paused',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Paused'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"SkateDaoAddressesUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSkateDaoAddressesUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'SkateDaoAddressesUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'SkateDaoAddressesUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'SkateDaoAddressesUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"Unpaused"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUnpausedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Unpaused'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2AuctionHouseAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'Unpaused',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Unpaused'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"Upgraded"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUpgradedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Upgraded'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2AuctionHouseAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Upgraded'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractRead({ abi: gnarsDaoABI, address: gnarsDaoAddress[1], ...config } as UseContractReadConfig<
    typeof gnarsDaoABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"BALLOT_TYPEHASH"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoBallotTypehash<
  TFunctionName extends 'BALLOT_TYPEHASH',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'BALLOT_TYPEHASH',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"DOMAIN_TYPEHASH"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoDomainTypehash<
  TFunctionName extends 'DOMAIN_TYPEHASH',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'DOMAIN_TYPEHASH',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MAX_PROPOSAL_THRESHOLD_BPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxProposalThresholdBps<
  TFunctionName extends 'MAX_PROPOSAL_THRESHOLD_BPS',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MAX_PROPOSAL_THRESHOLD_BPS',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MAX_QUORUM_VOTES_BPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxQuorumVotesBps<
  TFunctionName extends 'MAX_QUORUM_VOTES_BPS',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MAX_QUORUM_VOTES_BPS',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MAX_QUORUM_VOTES_BPS_UPPER_BOUND"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxQuorumVotesBpsUpperBound<
  TFunctionName extends 'MAX_QUORUM_VOTES_BPS_UPPER_BOUND',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MAX_QUORUM_VOTES_BPS_UPPER_BOUND',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MAX_REFUND_BASE_FEE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxRefundBaseFee<
  TFunctionName extends 'MAX_REFUND_BASE_FEE',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MAX_REFUND_BASE_FEE',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MAX_REFUND_GAS_USED"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxRefundGasUsed<
  TFunctionName extends 'MAX_REFUND_GAS_USED',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MAX_REFUND_GAS_USED',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MAX_REFUND_PRIORITY_FEE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxRefundPriorityFee<
  TFunctionName extends 'MAX_REFUND_PRIORITY_FEE',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MAX_REFUND_PRIORITY_FEE',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MAX_VOTING_DELAY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxVotingDelay<
  TFunctionName extends 'MAX_VOTING_DELAY',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MAX_VOTING_DELAY',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MAX_VOTING_PERIOD"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxVotingPeriod<
  TFunctionName extends 'MAX_VOTING_PERIOD',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MAX_VOTING_PERIOD',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MIN_PROPOSAL_THRESHOLD_BPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMinProposalThresholdBps<
  TFunctionName extends 'MIN_PROPOSAL_THRESHOLD_BPS',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MIN_PROPOSAL_THRESHOLD_BPS',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MIN_QUORUM_VOTES_BPS_LOWER_BOUND"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMinQuorumVotesBpsLowerBound<
  TFunctionName extends 'MIN_QUORUM_VOTES_BPS_LOWER_BOUND',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MIN_QUORUM_VOTES_BPS_LOWER_BOUND',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MIN_QUORUM_VOTES_BPS_UPPER_BOUND"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMinQuorumVotesBpsUpperBound<
  TFunctionName extends 'MIN_QUORUM_VOTES_BPS_UPPER_BOUND',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MIN_QUORUM_VOTES_BPS_UPPER_BOUND',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MIN_VOTING_DELAY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMinVotingDelay<
  TFunctionName extends 'MIN_VOTING_DELAY',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MIN_VOTING_DELAY',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"MIN_VOTING_PERIOD"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMinVotingPeriod<
  TFunctionName extends 'MIN_VOTING_PERIOD',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'MIN_VOTING_PERIOD',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"REFUND_BASE_GAS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoRefundBaseGas<
  TFunctionName extends 'REFUND_BASE_GAS',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'REFUND_BASE_GAS',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"admin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoAdmin<
  TFunctionName extends 'admin',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'admin',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"dynamicQuorumVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoDynamicQuorumVotes<
  TFunctionName extends 'dynamicQuorumVotes',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'dynamicQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"getActions"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoGetActions<
  TFunctionName extends 'getActions',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'getActions',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"getDynamicQuorumParamsAt"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoGetDynamicQuorumParamsAt<
  TFunctionName extends 'getDynamicQuorumParamsAt',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'getDynamicQuorumParamsAt',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"getReceipt"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoGetReceipt<
  TFunctionName extends 'getReceipt',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'getReceipt',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"gnars"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoGnars<
  TFunctionName extends 'gnars',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'gnars',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"implementation"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoImplementation<
  TFunctionName extends 'implementation',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'implementation',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"latestProposalIds"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoLatestProposalIds<
  TFunctionName extends 'latestProposalIds',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'latestProposalIds',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"maxQuorumVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxQuorumVotes<
  TFunctionName extends 'maxQuorumVotes',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'maxQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"minQuorumVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMinQuorumVotes<
  TFunctionName extends 'minQuorumVotes',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'minQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"pendingAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoPendingAdmin<
  TFunctionName extends 'pendingAdmin',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'pendingAdmin',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"pendingVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoPendingVetoer<
  TFunctionName extends 'pendingVetoer',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'pendingVetoer',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"proposalCount"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalCount<
  TFunctionName extends 'proposalCount',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'proposalCount',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"proposalMaxOperations"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalMaxOperations<
  TFunctionName extends 'proposalMaxOperations',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'proposalMaxOperations',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"proposalThreshold"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalThreshold<
  TFunctionName extends 'proposalThreshold',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'proposalThreshold',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"proposalThresholdBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalThresholdBps<
  TFunctionName extends 'proposalThresholdBPS',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'proposalThresholdBPS',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"proposals"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposals<
  TFunctionName extends 'proposals',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'proposals',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"quorumParamsCheckpoints"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoQuorumParamsCheckpoints<
  TFunctionName extends 'quorumParamsCheckpoints',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'quorumParamsCheckpoints',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"quorumVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoQuorumVotes<
  TFunctionName extends 'quorumVotes',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'quorumVotes',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"quorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoQuorumVotesBps<
  TFunctionName extends 'quorumVotesBPS',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'quorumVotesBPS',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"state"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoState<
  TFunctionName extends 'state',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'state',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"timelock"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoTimelock<
  TFunctionName extends 'timelock',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'timelock',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"vetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoVetoer<
  TFunctionName extends 'vetoer',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'vetoer',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"votingDelay"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoVotingDelay<
  TFunctionName extends 'votingDelay',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'votingDelay',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"votingPeriod"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoVotingPeriod<
  TFunctionName extends 'votingPeriod',
  TSelectData = ReadContractResult<typeof gnarsDaoABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'votingPeriod',
    ...config,
  } as UseContractReadConfig<typeof gnarsDaoABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof gnarsDaoABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, TFunctionName, TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_acceptAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoAcceptAdmin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_acceptAdmin'>['request']['abi'],
        '_acceptAdmin',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_acceptAdmin' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_acceptAdmin', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_acceptAdmin'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_acceptAdmin', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_acceptAdmin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_acceptVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoAcceptVetoer<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_acceptVetoer'>['request']['abi'],
        '_acceptVetoer',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_acceptVetoer' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_acceptVetoer', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_acceptVetoer'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_acceptVetoer', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_acceptVetoer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_burnVetoPower"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoBurnVetoPower<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_burnVetoPower'>['request']['abi'],
        '_burnVetoPower',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_burnVetoPower' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_burnVetoPower', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_burnVetoPower'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_burnVetoPower', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_burnVetoPower',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setDynamicQuorumParams"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetDynamicQuorumParams<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setDynamicQuorumParams'>['request']['abi'],
        '_setDynamicQuorumParams',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setDynamicQuorumParams' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setDynamicQuorumParams', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setDynamicQuorumParams'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setDynamicQuorumParams', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setDynamicQuorumParams',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setMaxQuorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetMaxQuorumVotesBps<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setMaxQuorumVotesBPS'>['request']['abi'],
        '_setMaxQuorumVotesBPS',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setMaxQuorumVotesBPS' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setMaxQuorumVotesBPS', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setMaxQuorumVotesBPS'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setMaxQuorumVotesBPS', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setMaxQuorumVotesBPS',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setMinQuorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetMinQuorumVotesBps<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setMinQuorumVotesBPS'>['request']['abi'],
        '_setMinQuorumVotesBPS',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setMinQuorumVotesBPS' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setMinQuorumVotesBPS', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setMinQuorumVotesBPS'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setMinQuorumVotesBPS', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setMinQuorumVotesBPS',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setPendingAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetPendingAdmin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setPendingAdmin'>['request']['abi'],
        '_setPendingAdmin',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setPendingAdmin' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setPendingAdmin', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setPendingAdmin'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setPendingAdmin', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setPendingAdmin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setPendingVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetPendingVetoer<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setPendingVetoer'>['request']['abi'],
        '_setPendingVetoer',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setPendingVetoer' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setPendingVetoer', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setPendingVetoer'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setPendingVetoer', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setPendingVetoer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setProposalThresholdBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetProposalThresholdBps<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setProposalThresholdBPS'>['request']['abi'],
        '_setProposalThresholdBPS',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setProposalThresholdBPS' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setProposalThresholdBPS', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setProposalThresholdBPS'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setProposalThresholdBPS', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setProposalThresholdBPS',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setQuorumCoefficient"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetQuorumCoefficient<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setQuorumCoefficient'>['request']['abi'],
        '_setQuorumCoefficient',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setQuorumCoefficient' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setQuorumCoefficient', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setQuorumCoefficient'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setQuorumCoefficient', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setQuorumCoefficient',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setVotingDelay"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetVotingDelay<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setVotingDelay'>['request']['abi'],
        '_setVotingDelay',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setVotingDelay' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setVotingDelay', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setVotingDelay'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setVotingDelay', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setVotingDelay',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setVotingPeriod"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoSetVotingPeriod<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_setVotingPeriod'>['request']['abi'],
        '_setVotingPeriod',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_setVotingPeriod' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_setVotingPeriod', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_setVotingPeriod'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_setVotingPeriod', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setVotingPeriod',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoWithdraw<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, '_withdraw'>['request']['abi'],
        '_withdraw',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_withdraw' }
    : UseContractWriteConfig<typeof gnarsDaoABI, '_withdraw', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: '_withdraw'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, '_withdraw', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"cancel"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoCancel<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'cancel'>['request']['abi'],
        'cancel',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'cancel' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'cancel', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'cancel'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'cancel', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'cancel',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castRefundableVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoCastRefundableVote<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'castRefundableVote'>['request']['abi'],
        'castRefundableVote',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'castRefundableVote' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'castRefundableVote', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'castRefundableVote'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'castRefundableVote', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castRefundableVote',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castRefundableVoteWithReason"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoCastRefundableVoteWithReason<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'castRefundableVoteWithReason'>['request']['abi'],
        'castRefundableVoteWithReason',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'castRefundableVoteWithReason' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'castRefundableVoteWithReason', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'castRefundableVoteWithReason'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'castRefundableVoteWithReason', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castRefundableVoteWithReason',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoCastVote<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'castVote'>['request']['abi'],
        'castVote',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'castVote' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'castVote', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'castVote'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'castVote', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castVote',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castVoteBySig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoCastVoteBySig<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'castVoteBySig'>['request']['abi'],
        'castVoteBySig',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'castVoteBySig' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'castVoteBySig', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'castVoteBySig'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'castVoteBySig', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castVoteBySig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castVoteWithReason"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoCastVoteWithReason<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'castVoteWithReason'>['request']['abi'],
        'castVoteWithReason',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'castVoteWithReason' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'castVoteWithReason', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'castVoteWithReason'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'castVoteWithReason', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castVoteWithReason',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"execute"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoExecute<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'execute'>['request']['abi'],
        'execute',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'execute' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'execute', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'execute'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'execute', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'execute',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoInitialize<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'initialize'>['request']['abi'],
        'initialize',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'initialize', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'initialize', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"propose"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoPropose<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'propose'>['request']['abi'],
        'propose',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'propose' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'propose', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'propose'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'propose', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'propose',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"queue"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoQueue<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'queue'>['request']['abi'],
        'queue',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'queue' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'queue', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'queue'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'queue', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'queue',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"veto"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoVeto<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsDaoAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsDaoABI, 'veto'>['request']['abi'],
        'veto',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'veto' }
    : UseContractWriteConfig<typeof gnarsDaoABI, 'veto', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'veto'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsDaoABI, 'veto', TMode>({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'veto',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_acceptAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoAcceptAdmin(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_acceptAdmin'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_acceptAdmin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_acceptAdmin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_acceptVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoAcceptVetoer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_acceptVetoer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_acceptVetoer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_acceptVetoer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_burnVetoPower"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoBurnVetoPower(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_burnVetoPower'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_burnVetoPower',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_burnVetoPower'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setDynamicQuorumParams"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetDynamicQuorumParams(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setDynamicQuorumParams'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setDynamicQuorumParams',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setDynamicQuorumParams'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setMaxQuorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetMaxQuorumVotesBps(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setMaxQuorumVotesBPS'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setMaxQuorumVotesBPS',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setMaxQuorumVotesBPS'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setMinQuorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetMinQuorumVotesBps(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setMinQuorumVotesBPS'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setMinQuorumVotesBPS',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setMinQuorumVotesBPS'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setPendingAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetPendingAdmin(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setPendingAdmin'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setPendingAdmin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setPendingAdmin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setPendingVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetPendingVetoer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setPendingVetoer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setPendingVetoer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setPendingVetoer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setProposalThresholdBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetProposalThresholdBps(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setProposalThresholdBPS'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setProposalThresholdBPS',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setProposalThresholdBPS'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setQuorumCoefficient"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetQuorumCoefficient(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setQuorumCoefficient'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setQuorumCoefficient',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setQuorumCoefficient'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setVotingDelay"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetVotingDelay(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setVotingDelay'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setVotingDelay',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setVotingDelay'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_setVotingPeriod"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoSetVotingPeriod(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setVotingPeriod'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_setVotingPeriod',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_setVotingPeriod'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"_withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoWithdraw(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_withdraw'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: '_withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, '_withdraw'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"cancel"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoCancel(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'cancel'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'cancel',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'cancel'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castRefundableVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoCastRefundableVote(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castRefundableVote'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castRefundableVote',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castRefundableVote'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castRefundableVoteWithReason"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoCastRefundableVoteWithReason(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castRefundableVoteWithReason'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castRefundableVoteWithReason',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castRefundableVoteWithReason'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoCastVote(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castVote'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castVote',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castVote'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castVoteBySig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoCastVoteBySig(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castVoteBySig'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castVoteBySig',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castVoteBySig'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"castVoteWithReason"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoCastVoteWithReason(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castVoteWithReason'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'castVoteWithReason',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'castVoteWithReason'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"execute"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoExecute(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'execute'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'execute',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'execute'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoInitialize(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'initialize'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'initialize'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"propose"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoPropose(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'propose'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'propose',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'propose'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"queue"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoQueue(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'queue'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'queue',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'queue'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsDaoABI}__ and `functionName` set to `"veto"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function usePrepareGnarsDaoVeto(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'veto'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    functionName: 'veto',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsDaoABI, 'veto'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({ abi: gnarsDaoABI, address: gnarsDaoAddress[1], ...config } as UseContractEventConfig<
    typeof gnarsDaoABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"MaxQuorumVotesBPSSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMaxQuorumVotesBpsSetEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'MaxQuorumVotesBPSSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'MaxQuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'MaxQuorumVotesBPSSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"MinQuorumVotesBPSSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoMinQuorumVotesBpsSetEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'MinQuorumVotesBPSSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'MinQuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'MinQuorumVotesBPSSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"NewAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoNewAdminEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'NewAdmin'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'NewAdmin',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'NewAdmin'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"NewImplementation"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoNewImplementationEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'NewImplementation'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'NewImplementation',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'NewImplementation'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"NewPendingAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoNewPendingAdminEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'NewPendingAdmin'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'NewPendingAdmin',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'NewPendingAdmin'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"NewPendingVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoNewPendingVetoerEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'NewPendingVetoer'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'NewPendingVetoer',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'NewPendingVetoer'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"NewVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoNewVetoerEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'NewVetoer'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'NewVetoer',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'NewVetoer'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"ProposalCanceled"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalCanceledEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'ProposalCanceled'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'ProposalCanceled',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'ProposalCanceled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"ProposalCreated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalCreatedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'ProposalCreated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'ProposalCreated',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'ProposalCreated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"ProposalCreatedWithRequirements"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalCreatedWithRequirementsEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsDaoABI, 'ProposalCreatedWithRequirements'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'ProposalCreatedWithRequirements',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'ProposalCreatedWithRequirements'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"ProposalExecuted"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalExecutedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'ProposalExecuted'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'ProposalExecuted',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'ProposalExecuted'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"ProposalQueued"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalQueuedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'ProposalQueued'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'ProposalQueued',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'ProposalQueued'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"ProposalThresholdBPSSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalThresholdBpsSetEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsDaoABI, 'ProposalThresholdBPSSet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsDaoAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'ProposalThresholdBPSSet',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'ProposalThresholdBPSSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"ProposalVetoed"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoProposalVetoedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'ProposalVetoed'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'ProposalVetoed',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'ProposalVetoed'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"QuorumCoefficientSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoQuorumCoefficientSetEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'QuorumCoefficientSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'QuorumCoefficientSet',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'QuorumCoefficientSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"QuorumVotesBPSSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoQuorumVotesBpsSetEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'QuorumVotesBPSSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'QuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'QuorumVotesBPSSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"RefundableVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoRefundableVoteEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'RefundableVote'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'RefundableVote',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'RefundableVote'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"VoteCast"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoVoteCastEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'VoteCast'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'VoteCast',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'VoteCast'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"VotingDelaySet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoVotingDelaySetEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'VotingDelaySet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'VotingDelaySet',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'VotingDelaySet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"VotingPeriodSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoVotingPeriodSetEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'VotingPeriodSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'VotingPeriodSet',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'VotingPeriodSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsDaoABI}__ and `eventName` set to `"Withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x156E94a6e16244cCFDf16E1193198Ea9d80dD7E3)
 */
export function useGnarsDaoWithdrawEvent(
  config: Omit<UseContractEventConfig<typeof gnarsDaoABI, 'Withdraw'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsDaoAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsDaoABI,
    address: gnarsDaoAddress[1],
    eventName: 'Withdraw',
    ...config,
  } as UseContractEventConfig<typeof gnarsDaoABI, 'Withdraw'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"DELEGATION_TYPEHASH"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegationTypehash<
  TFunctionName extends 'DELEGATION_TYPEHASH',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'DELEGATION_TYPEHASH',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"DOMAIN_TYPEHASH"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDomainTypehash<
  TFunctionName extends 'DOMAIN_TYPEHASH',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'DOMAIN_TYPEHASH',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"checkpoints"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenCheckpoints<
  TFunctionName extends 'checkpoints',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'checkpoints',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"customDescription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenCustomDescription<
  TFunctionName extends 'customDescription',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'customDescription',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"decimals"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDecimals<
  TFunctionName extends 'decimals',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegates"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegates<
  TFunctionName extends 'delegates',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'delegates',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"descriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDescriptor<
  TFunctionName extends 'descriptor',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'descriptor',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"getCurrentVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGetCurrentVotes<
  TFunctionName extends 'getCurrentVotes',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'getCurrentVotes',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"getPriorVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGetPriorVotes<
  TFunctionName extends 'getPriorVotes',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'getPriorVotes',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"initialGnarId"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenInitialGnarId<
  TFunctionName extends 'initialGnarId',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'initialGnarId',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenIsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"isDescriptorLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenIsDescriptorLocked<
  TFunctionName extends 'isDescriptorLocked',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'isDescriptorLocked',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"isMinterLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenIsMinterLocked<
  TFunctionName extends 'isMinterLocked',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'isMinterLocked',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"isSeederLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenIsSeederLocked<
  TFunctionName extends 'isSeederLocked',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'isSeederLocked',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"minter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenMinter<
  TFunctionName extends 'minter',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'minter',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"nonces"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenNonces<
  TFunctionName extends 'nonces',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'nonces',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"noundersDAO"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenNoundersDao<
  TFunctionName extends 'noundersDAO',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'noundersDAO',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"numCheckpoints"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenNumCheckpoints<
  TFunctionName extends 'numCheckpoints',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'numCheckpoints',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"proxyRegistry"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenProxyRegistry<
  TFunctionName extends 'proxyRegistry',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'proxyRegistry',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"seeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSeeder<
  TFunctionName extends 'seeder',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'seeder',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"seeds"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSeeds<
  TFunctionName extends 'seeds',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'seeds',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTokenByIndex<
  TFunctionName extends 'tokenByIndex',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTokenOfOwnerByIndex<
  TFunctionName extends 'tokenOfOwnerByIndex',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"viewDescription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenViewDescription<
  TFunctionName extends 'viewDescription',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'viewDescription',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"votesToDelegate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenVotesToDelegate<
  TFunctionName extends 'votesToDelegate',
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'votesToDelegate',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, TFunctionName, TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'approve'>['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'approve', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenBurn<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'burn'>['request']['abi'],
        'burn',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'burn', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'burn'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'burn', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegate<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'delegate'>['request']['abi'],
        'delegate',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'delegate' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'delegate', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'delegate'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'delegate', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'delegate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegateBySig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegateBySig<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'delegateBySig'>['request']['abi'],
        'delegateBySig',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'delegateBySig' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'delegateBySig', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'delegateBySig'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'delegateBySig', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'delegateBySig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenLockDescriptor<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'lockDescriptor'>['request']['abi'],
        'lockDescriptor',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'lockDescriptor' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'lockDescriptor', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'lockDescriptor'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'lockDescriptor', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'lockDescriptor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockMinter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenLockMinter<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'lockMinter'>['request']['abi'],
        'lockMinter',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'lockMinter' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'lockMinter', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'lockMinter'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'lockMinter', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'lockMinter',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenLockSeeder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'lockSeeder'>['request']['abi'],
        'lockSeeder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'lockSeeder' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'lockSeeder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'lockSeeder'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'lockSeeder', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'lockSeeder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenMint<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'mint'>['request']['abi'],
        'mint',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'mint', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mint'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'mint', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'renounceOwnership'>['request']['abi'],
        'renounceOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'renounceOwnership' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'renounceOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'renounceOwnership', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSafeTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'safeTransferFrom'>['request']['abi'],
        'safeTransferFrom',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'safeTransferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'safeTransferFrom', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetApprovalForAll<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'setApprovalForAll'>['request']['abi'],
        'setApprovalForAll',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'setApprovalForAll', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'setApprovalForAll', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setCustomDescription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetCustomDescription<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'setCustomDescription'>['request']['abi'],
        'setCustomDescription',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setCustomDescription' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'setCustomDescription', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setCustomDescription'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'setCustomDescription', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setCustomDescription',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetDescriptor<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'setDescriptor'>['request']['abi'],
        'setDescriptor',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setDescriptor' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'setDescriptor', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDescriptor'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'setDescriptor', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setDescriptor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setMinter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetMinter<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'setMinter'>['request']['abi'],
        'setMinter',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setMinter' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'setMinter', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinter'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'setMinter', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setMinter',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetSeeder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'setSeeder'>['request']['abi'],
        'setSeeder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setSeeder' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'setSeeder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSeeder'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'setSeeder', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setSeeder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'transferFrom'>['request']['abi'],
        'transferFrom',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'transferFrom' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'transferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'transferFrom', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'transferOwnership'>['request']['abi'],
        'transferOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'transferOwnership' }
    : UseContractWriteConfig<typeof gnarsV2TokenABI, 'transferOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<typeof gnarsV2TokenABI, 'transferOwnership', TMode>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenApprove(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'approve'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenBurn(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'burn'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'burn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenDelegate(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'delegate'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'delegate',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'delegate'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegateBySig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenDelegateBySig(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'delegateBySig'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'delegateBySig',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'delegateBySig'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenLockDescriptor(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockDescriptor'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'lockDescriptor',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockDescriptor'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockMinter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenLockMinter(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockMinter'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'lockMinter',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockMinter'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenLockSeeder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockSeeder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'lockSeeder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockSeeder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenMint(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'mint'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setCustomDescription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetCustomDescription(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setCustomDescription'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setCustomDescription',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setCustomDescription'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetDescriptor(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setDescriptor'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setDescriptor',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setDescriptor'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setMinter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetMinter(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setMinter'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setMinter',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setMinter'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetSeeder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setSeeder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'setSeeder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setSeeder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenApprovalEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'Approval'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenApprovalForAllEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'ApprovalForAll'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"DelegateChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegateChangedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'DelegateChanged'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'DelegateChanged',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'DelegateChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"DelegateVotesChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegateVotesChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'DelegateVotesChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'DelegateVotesChanged',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'DelegateVotesChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"DescriptorLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDescriptorLockedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'DescriptorLocked'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'DescriptorLocked',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'DescriptorLocked'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"DescriptorUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDescriptorUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'DescriptorUpdated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'DescriptorUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'DescriptorUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"GnarBurned"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGnarBurnedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'GnarBurned'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'GnarBurned',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'GnarBurned'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"GnarCreated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGnarCreatedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'GnarCreated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'GnarCreated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'GnarCreated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"MinterLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenMinterLockedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'MinterLocked'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'MinterLocked',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'MinterLocked'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"MinterUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenMinterUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'MinterUpdated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'MinterUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'MinterUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"SeederLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSeederLockedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'SeederLocked'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'SeederLocked',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'SeederLocked'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"SeederUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSeederUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'SeederUpdated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'SeederUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'SeederUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTransferEvent(
  config: Omit<UseContractEventConfig<typeof gnarsV2TokenABI, 'Transfer'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[chainId as keyof typeof gnarsV2TokenAddress],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractRead({ abi: gnarsOgABI, address: gnarsOgAddress[1], ...config } as UseContractReadConfig<
    typeof gnarsOgABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"auction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuction<
  TFunctionName extends 'auction',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'auction',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"auctionPeriodBlocks"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionPeriodBlocks<
  TFunctionName extends 'auctionPeriodBlocks',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'auctionPeriodBlocks',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"currentGnarId"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgCurrentGnarId<
  TFunctionName extends 'currentGnarId',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'currentGnarId',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"dao"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgDao<
  TFunctionName extends 'dao',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'dao',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"descriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgDescriptor<
  TFunctionName extends 'descriptor',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'descriptor',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgGetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgIsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"minBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgMinBidIncrementPercentage<
  TFunctionName extends 'minBidIncrementPercentage',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'minBidIncrementPercentage',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"paused"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgPaused<
  TFunctionName extends 'paused',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'paused',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"remainBlocks"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgRemainBlocks<
  TFunctionName extends 'remainBlocks',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'remainBlocks',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"reservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgReservePrice<
  TFunctionName extends 'reservePrice',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'reservePrice',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"seeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSeeder<
  TFunctionName extends 'seeder',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'seeder',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"seeds"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSeeds<
  TFunctionName extends 'seeds',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'seeds',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"skate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSkate<
  TFunctionName extends 'skate',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'skate',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTokenByIndex<
  TFunctionName extends 'tokenByIndex',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTokenOfOwnerByIndex<
  TFunctionName extends 'tokenOfOwnerByIndex',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof gnarsOgABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, TFunctionName, TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'approve'>['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'approve', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"auctionStart"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionStart<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'auctionStart'>['request']['abi'],
        'auctionStart',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'auctionStart' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'auctionStart', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'auctionStart'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'auctionStart', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'auctionStart',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgBurn<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof gnarsOgABI, 'burn'>['request']['abi'], 'burn', TMode> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'burn'
      }
    : UseContractWriteConfig<typeof gnarsOgABI, 'burn', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'burn', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"createBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgCreateBid<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'createBid'>['request']['abi'],
        'createBid',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'createBid' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'createBid', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createBid'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'createBid', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'createBid',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"pause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgPause<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'pause'>['request']['abi'],
        'pause',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'pause' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'pause', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'pause'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'pause', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'pause',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'renounceOwnership'>['request']['abi'],
        'renounceOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'renounceOwnership' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'renounceOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'renounceOwnership', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSafeTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'safeTransferFrom'>['request']['abi'],
        'safeTransferFrom',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'safeTransferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'safeTransferFrom', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetApprovalForAll<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'setApprovalForAll'>['request']['abi'],
        'setApprovalForAll',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'setApprovalForAll', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'setApprovalForAll', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setAuctionPeriodBlocks"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetAuctionPeriodBlocks<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'setAuctionPeriodBlocks'>['request']['abi'],
        'setAuctionPeriodBlocks',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setAuctionPeriodBlocks' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'setAuctionPeriodBlocks', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setAuctionPeriodBlocks'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'setAuctionPeriodBlocks', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setAuctionPeriodBlocks',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetDescriptor<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'setDescriptor'>['request']['abi'],
        'setDescriptor',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setDescriptor' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'setDescriptor', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDescriptor'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'setDescriptor', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setDescriptor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setMinBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetMinBidIncrementPercentage<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'setMinBidIncrementPercentage'>['request']['abi'],
        'setMinBidIncrementPercentage',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setMinBidIncrementPercentage' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'setMinBidIncrementPercentage', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinBidIncrementPercentage'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'setMinBidIncrementPercentage', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setMinBidIncrementPercentage',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setReservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetReservePrice<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'setReservePrice'>['request']['abi'],
        'setReservePrice',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setReservePrice' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'setReservePrice', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setReservePrice'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'setReservePrice', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setReservePrice',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetSeeder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'setSeeder'>['request']['abi'],
        'setSeeder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setSeeder' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'setSeeder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSeeder'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'setSeeder', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setSeeder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setSkateDaoAddresses"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetSkateDaoAddresses<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'setSkateDaoAddresses'>['request']['abi'],
        'setSkateDaoAddresses',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setSkateDaoAddresses' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'setSkateDaoAddresses', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSkateDaoAddresses'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'setSkateDaoAddresses', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setSkateDaoAddresses',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"settleCurrentAndCreateNewAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSettleCurrentAndCreateNewAuction<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'settleCurrentAndCreateNewAuction'>['request']['abi'],
        'settleCurrentAndCreateNewAuction',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'settleCurrentAndCreateNewAuction' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'settleCurrentAndCreateNewAuction', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'settleCurrentAndCreateNewAuction'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'settleCurrentAndCreateNewAuction', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'settleCurrentAndCreateNewAuction',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'transferFrom'>['request']['abi'],
        'transferFrom',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'transferFrom' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'transferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'transferFrom', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'transferOwnership'>['request']['abi'],
        'transferOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'transferOwnership' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'transferOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'transferOwnership', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"unpause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgUnpause<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsOgABI, 'unpause'>['request']['abi'],
        'unpause',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'unpause' }
    : UseContractWriteConfig<typeof gnarsOgABI, 'unpause', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unpause'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsOgABI, 'unpause', TMode>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'unpause',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgApprove(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, 'approve'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"auctionStart"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgAuctionStart(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, 'auctionStart'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'auctionStart',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'auctionStart'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgBurn(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, 'burn'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'burn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"createBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgCreateBid(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, 'createBid'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'createBid',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'createBid'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"pause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgPause(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, 'pause'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'pause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'pause'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setAuctionPeriodBlocks"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetAuctionPeriodBlocks(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setAuctionPeriodBlocks'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setAuctionPeriodBlocks',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setAuctionPeriodBlocks'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetDescriptor(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setDescriptor'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setDescriptor',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setDescriptor'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setMinBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetMinBidIncrementPercentage(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setMinBidIncrementPercentage'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setMinBidIncrementPercentage',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setMinBidIncrementPercentage'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setReservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetReservePrice(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setReservePrice'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setReservePrice',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setReservePrice'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetSeeder(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setSeeder'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setSeeder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setSeeder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setSkateDaoAddresses"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetSkateDaoAddresses(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setSkateDaoAddresses'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setSkateDaoAddresses',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setSkateDaoAddresses'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"settleCurrentAndCreateNewAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSettleCurrentAndCreateNewAuction(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'settleCurrentAndCreateNewAuction'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'settleCurrentAndCreateNewAuction',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'settleCurrentAndCreateNewAuction'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgTransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, 'transferFrom'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"unpause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgUnpause(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsOgABI, 'unpause'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'unpause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'unpause'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({ abi: gnarsOgABI, address: gnarsOgAddress[1], ...config } as UseContractEventConfig<
    typeof gnarsOgABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgApprovalEvent(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, 'Approval'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgApprovalForAllEvent(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, 'ApprovalForAll'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"AuctionBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionBidEvent(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, 'AuctionBid'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'AuctionBid',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'AuctionBid'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"AuctionCreated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionCreatedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, 'AuctionCreated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'AuctionCreated',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'AuctionCreated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"AuctionSettled"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionSettledEvent(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, 'AuctionSettled'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'AuctionSettled',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'AuctionSettled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"MinBidIncrementPercentageUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgMinBidIncrementPercentageUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'MinBidIncrementPercentageUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'MinBidIncrementPercentageUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'MinBidIncrementPercentageUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, 'OwnershipTransferred'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"ReservePriceUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgReservePriceUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, 'ReservePriceUpdated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'ReservePriceUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'ReservePriceUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTransferEvent(
  config: Omit<UseContractEventConfig<typeof gnarsOgABI, 'Transfer'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsHdAddress
  } = {} as any,
) {
  return useContractRead({ abi: gnarsHdABI, address: gnarsHdAddress[1], ...config } as UseContractReadConfig<
    typeof gnarsHdABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdApprove<
  TFunctionName extends 'approve',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'approve',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"artwork"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdArtwork<
  TFunctionName extends 'artwork',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'artwork',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"contractURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdContractUri<
  TFunctionName extends 'contractURI',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'contractURI',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"getAttributes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdGetAttributes<
  TFunctionName extends 'getAttributes',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'getAttributes',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"getBackgroundQueryParam"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdGetBackgroundQueryParam<
  TFunctionName extends 'getBackgroundQueryParam',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'getBackgroundQueryParam',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"getPartQueryParam"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdGetPartQueryParam<
  TFunctionName extends 'getPartQueryParam',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'getPartQueryParam',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"getPartTrait"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdGetPartTrait<
  TFunctionName extends 'getPartTrait',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'getPartTrait',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"gnarsV2"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdGnarsV2<
  TFunctionName extends 'gnarsV2',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'gnarsV2',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"isTransferable"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdIsTransferable<
  TFunctionName extends 'isTransferable',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'isTransferable',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"rendererBaseUri"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdRendererBaseUri<
  TFunctionName extends 'rendererBaseUri',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'rendererBaseUri',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdSafeTransferFrom<
  TFunctionName extends 'safeTransferFrom',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdSetApprovalForAll<
  TFunctionName extends 'setApprovalForAll',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdTokenByIndex<
  TFunctionName extends 'tokenByIndex',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdTokenOfOwnerByIndex<
  TFunctionName extends 'tokenOfOwnerByIndex',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdTotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdTransferFrom<
  TFunctionName extends 'transferFrom',
  TSelectData = ReadContractResult<typeof gnarsHdABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UseContractReadConfig<typeof gnarsHdABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsHdABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsHdAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsHdABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof gnarsHdABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof gnarsHdABI, TFunctionName, TMode>({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"assertOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdAssertOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsHdAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsHdABI, 'assertOwnership'>['request']['abi'],
        'assertOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'assertOwnership' }
    : UseContractWriteConfig<typeof gnarsHdABI, 'assertOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'assertOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsHdABI, 'assertOwnership', TMode>({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'assertOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"setArtwork"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdSetArtwork<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsHdAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsHdABI, 'setArtwork'>['request']['abi'],
        'setArtwork',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setArtwork' }
    : UseContractWriteConfig<typeof gnarsHdABI, 'setArtwork', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setArtwork'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsHdABI, 'setArtwork', TMode>({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'setArtwork',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"setContractUri"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdSetContractUri<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsHdAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsHdABI, 'setContractUri'>['request']['abi'],
        'setContractUri',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setContractUri' }
    : UseContractWriteConfig<typeof gnarsHdABI, 'setContractUri', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setContractUri'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsHdABI, 'setContractUri', TMode>({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'setContractUri',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"setRendererBaseUri"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdSetRendererBaseUri<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsHdAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsHdABI, 'setRendererBaseUri'>['request']['abi'],
        'setRendererBaseUri',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setRendererBaseUri' }
    : UseContractWriteConfig<typeof gnarsHdABI, 'setRendererBaseUri', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setRendererBaseUri'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsHdABI, 'setRendererBaseUri', TMode>({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'setRendererBaseUri',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gnarsHdAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gnarsHdABI, 'transferOwnership'>['request']['abi'],
        'transferOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'transferOwnership' }
    : UseContractWriteConfig<typeof gnarsHdABI, 'transferOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof gnarsHdABI, 'transferOwnership', TMode>({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsHdABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function usePrepareGnarsHdWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsHdABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsHdAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsHdABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"assertOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function usePrepareGnarsHdAssertOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsHdABI, 'assertOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'assertOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsHdABI, 'assertOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"setArtwork"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function usePrepareGnarsHdSetArtwork(
  config: Omit<UsePrepareContractWriteConfig<typeof gnarsHdABI, 'setArtwork'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gnarsHdAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'setArtwork',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsHdABI, 'setArtwork'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"setContractUri"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function usePrepareGnarsHdSetContractUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsHdABI, 'setContractUri'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'setContractUri',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsHdABI, 'setContractUri'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"setRendererBaseUri"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function usePrepareGnarsHdSetRendererBaseUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsHdABI, 'setRendererBaseUri'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'setRendererBaseUri',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsHdABI, 'setRendererBaseUri'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsHdABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function usePrepareGnarsHdTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsHdABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsHdAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsHdABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsHdABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof gnarsHdABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsHdAddress
  } = {} as any,
) {
  return useContractEvent({ abi: gnarsHdABI, address: gnarsHdAddress[1], ...config } as UseContractEventConfig<
    typeof gnarsHdABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsHdABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof gnarsHdABI, 'OwnershipTransferred'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsHdAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof gnarsHdABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsHdABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x75Cd3F538c091C1D514aB1aD9832f54198CAceC0)
 */
export function useGnarsHdTransferEvent(
  config: Omit<UseContractEventConfig<typeof gnarsHdABI, 'Transfer'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gnarsHdAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gnarsHdABI,
    address: gnarsHdAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof gnarsHdABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nnsensReverseResolverABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x849F92178950f6254db5D16D1ba265E70521aC1B)
 */
export function useNnsensReverseResolverRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof nnsensReverseResolverABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nnsensReverseResolverABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof nnsensReverseResolverAddress } = {} as any,
) {
  return useContractRead({
    abi: nnsensReverseResolverABI,
    address: nnsensReverseResolverAddress[1],
    ...config,
  } as UseContractReadConfig<typeof nnsensReverseResolverABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nnsensReverseResolverABI}__ and `functionName` set to `"ens"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x849F92178950f6254db5D16D1ba265E70521aC1B)
 */
export function useNnsensReverseResolverEns<
  TFunctionName extends 'ens',
  TSelectData = ReadContractResult<typeof nnsensReverseResolverABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nnsensReverseResolverABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nnsensReverseResolverAddress } = {} as any,
) {
  return useContractRead({
    abi: nnsensReverseResolverABI,
    address: nnsensReverseResolverAddress[1],
    functionName: 'ens',
    ...config,
  } as UseContractReadConfig<typeof nnsensReverseResolverABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nnsensReverseResolverABI}__ and `functionName` set to `"nns"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x849F92178950f6254db5D16D1ba265E70521aC1B)
 */
export function useNnsensReverseResolverNns<
  TFunctionName extends 'nns',
  TSelectData = ReadContractResult<typeof nnsensReverseResolverABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nnsensReverseResolverABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nnsensReverseResolverAddress } = {} as any,
) {
  return useContractRead({
    abi: nnsensReverseResolverABI,
    address: nnsensReverseResolverAddress[1],
    functionName: 'nns',
    ...config,
  } as UseContractReadConfig<typeof nnsensReverseResolverABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nnsensReverseResolverABI}__ and `functionName` set to `"resolve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x849F92178950f6254db5D16D1ba265E70521aC1B)
 */
export function useNnsensReverseResolverResolve<
  TFunctionName extends 'resolve',
  TSelectData = ReadContractResult<typeof nnsensReverseResolverABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nnsensReverseResolverABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nnsensReverseResolverAddress } = {} as any,
) {
  return useContractRead({
    abi: nnsensReverseResolverABI,
    address: nnsensReverseResolverAddress[1],
    functionName: 'resolve',
    ...config,
  } as UseContractReadConfig<typeof nnsensReverseResolverABI, TFunctionName, TSelectData>)
}
